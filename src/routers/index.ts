import router from "@/routers/router";
import NProgress from "@/config/nprogress";
import { HOME_URL } from "@/config/config";
import { AuthStore } from "@/store/modules/auth";
import { GlobalStore } from "@/store";
import { AxiosCanceler } from "@/api/helper/axiosCancel";

const axiosCanceler = new AxiosCanceler();

/**
 * @description Route intercepting BeForeeach
 * */
router.beforeEach((to, from, next) => {
	NProgress.start();
	// * Before jumping the route, clear all the requests
	axiosCanceler.removeAllPending();

	// * Determine whether the current routing needs access rights
	if (!to.matched.some(record => record.meta.requiresAuth)) return next();

	// * Determine whether there is token
	const globalStore = GlobalStore();
	if (!globalStore.token) {
		next({
			path: "/login"
		});
		NProgress.done();
		return;
	}

	const authStore = AuthStore();
	// * Dynamic Router(Dynamic routing, a one -dimensional array generated by the menu data returned by the back end)
	const dynamicRouter = authStore.dynamicRouter;
	// * Static Router(Static routing, the homepage address must be configured, otherwise you cannot enter the homepage to get the menu, button permission and other data)When obtaining the data, you will be loading, and all the homepage address is fine
	const staticRouter = [HOME_URL, "/403"];
	const routerList = dynamicRouter.concat(staticRouter);

	// * If the access address is not redirected to page 403 in the routing table
	if (routerList.indexOf(to.path) !== -1) return next();
	next({
		path: "/403"
	});
});

router.afterEach(() => {
	NProgress.done();
});

export default router;
